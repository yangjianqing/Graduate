<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.graduate.system.mapper.BStudentMapper">
    
    <resultMap type="BStudent" id="BStudentResult">
        <result property="sId"    column="s_id"    />
        <result property="sNumber"    column="s_number"    />
        <result property="sName"    column="s_name"    />
        <result property="sGender"    column="s_gender"    />
        <result property="sNumbers"    column="s_numbers"    />
        <result property="schoolId"    column="school_id"    />
        <result property="compenyId"    column="compeny_id"    />
        <result property="cStatus"    column="c_status"    />
        <result property="teacherId"    column="teacher_id"    />
        <result property="classId"    column="class_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBStudentVo">
        select s_id, s_number, s_name, s_gender, s_numbers, school_id, compeny_id, c_status, teacher_id, class_id, create_time, update_time from b_student
    </sql>

    <select id="selectBStudentList" parameterType="BStudent" resultMap="BStudentResult">
        <include refid="selectBStudentVo"/>
        <where>
            <if test="sId != null "> and s_id = #{sId}</if>
            <if test="sNumber != null  and sNumber != ''"> and s_number = #{sNumber}</if>
            <if test="sName != null  and sName != ''"> and s_name like concat('%', #{sName}, '%')</if>
            <if test="sGender != null "> and s_gender = #{sGender}</if>
            <if test="sNumbers != null  and sNumbers != ''"> and s_numbers = #{sNumbers}</if>
            <if test="schoolId != null "> and school_id = #{schoolId}</if>
            <if test="compenyId != null "> and compeny_id = #{compenyId}</if>
            <if test="cStatus != null "> and c_status = #{cStatus}</if>
            <if test="teacherId != null "> and teacher_id = #{teacherId}</if>
            <if test="classId != null "> and class_id = #{classId}</if>
            <if test="createTime != null "> and create_time = #{createTime}</if>
            <if test="updateTime != null "> and update_time = #{updateTime}</if>
        </where>
    </select>
    
    <select id="selectBStudentBySId" parameterType="Long" resultMap="BStudentResult">
        <include refid="selectBStudentVo"/>
        where s_id = #{sId}
    </select>

    <select id="selectBStudentPhone" resultMap="BStudentResult">
        <include refid="selectBStudentVo"/>
        where s_numbers = #{sNumbers}
    </select>

    <select id="selectBStudentCountMap" resultType="java.util.Map">
        SELECT school_id, COUNT(*) AS employment_count
        FROM b_student
        WHERE c_status = 0
        GROUP BY school_id
    </select>

    <select id="selectBStudentTimeMap" resultType="java.util.Map">
        SELECT MONTH(create_time) AS month, COUNT(*) AS count FROM b_student WHERE c_status=0 GROUP BY MONTH(create_time)
    </select>

    <select id="selectBStudentTimesMap" resultType="java.util.Map">
        SELECT MONTH(create_time) AS month, COUNT(*) AS count FROM b_student WHERE c_status=1 GROUP BY MONTH(create_time)
    </select>

    <insert id="insertBStudent" parameterType="BStudent" useGeneratedKeys="true" keyProperty="sId">
        insert into b_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sNumber != null">s_number,</if>
            <if test="sName != null">s_name,</if>
            <if test="sGender != null">s_gender,</if>
            <if test="sNumbers != null">s_numbers,</if>
            <if test="schoolId != null">school_id,</if>
            <if test="compenyId != null">compeny_id,</if>
            <if test="cStatus != null">c_status,</if>
            <if test="teacherId != null">teacher_id,</if>
            <if test="classId != null">class_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sNumber != null">#{sNumber},</if>
            <if test="sName != null">#{sName},</if>
            <if test="sGender != null">#{sGender},</if>
            <if test="sNumbers != null">#{sNumbers},</if>
            <if test="schoolId != null">#{schoolId},</if>
            <if test="compenyId != null">#{compenyId},</if>
            <if test="cStatus != null">#{cStatus},</if>
            <if test="teacherId != null">#{teacherId},</if>
            <if test="classId != null">#{classId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBStudent" parameterType="BStudent">
        update b_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="sNumber != null">s_number = #{sNumber},</if>
            <if test="sName != null">s_name = #{sName},</if>
            <if test="sGender != null">s_gender = #{sGender},</if>
            <if test="sNumbers != null">s_numbers = #{sNumbers},</if>
            <if test="schoolId != null">school_id = #{schoolId},</if>
            <if test="compenyId != null">compeny_id = #{compenyId},</if>
            <if test="cStatus != null">c_status = #{cStatus},</if>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="classId != null">class_id = #{classId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where s_id = #{sId}
    </update>

    <delete id="deleteBStudentBySId" parameterType="Long">
        delete from b_student where s_id = #{sId}
    </delete>

    <delete id="deleteBStudentBySIds" parameterType="String">
        delete from b_student where s_id in 
        <foreach item="sId" collection="array" open="(" separator="," close=")">
            #{sId}
        </foreach>
    </delete>
</mapper>